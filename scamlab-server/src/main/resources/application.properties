### GAMES SETTINGS ###
scamlab.max-lobbies=3
%prod.scamlab.timeout-lobby-in-seconds=120
%prod.scamlab.timeout-voting-in-seconds=30
%prod.scamlab.time-before-vote-in-seconds=150
scamlab.timeout-lobby-in-seconds=15
scamlab.timeout-voting-in-seconds=30
scamlab.time-before-vote-in-seconds=60
scamlab.number-of-rounds=2
scamlab.scenario-bot-only=true

### DEV SERVICES ###
quarkus.devservices.enabled=true
%prod.quarkus.devservices.enabled=false
quarkus.datasource.devservices.port=5432
quarkus.live-reload.instrumentation=true
#%prod.quarkus.live-reload.instrumentation=false

### GENERAL ###
quarkus.http.port=8080
quarkus.http.host=0.0.0.0
quarkus.swagger-ui.always-include=true

### LLM ###
quarkus.langchain4j.openai.log-requests=false
quarkus.langchain4j.openai.log-responses=false
quarkus.langchain4j.openai.chat-model.model-name=gemma-2-2b-it
%prod.quarkus.langchain4j.openai.chat-model.model-name=gemma-2-2b-it
quarkus.langchain4j.openai.base-url=http://localhost:1234/v1/
%prod.quarkus.langchain4j.openai.base-url=http://host.docker.internal:1234/v1/
quarkus.langchain4j.openai.timeout=20s


### LOGGING ###
quarkus.log.file.enable=true
quarkus.log.file.path=application.log
quarkus.log.file.level=INFO
quarkus.log.file.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
# Set 2 categories (io.quarkus.smallrye.jwt, io.undertow.request.security) to TRACE level
quarkus.log.min-level=INFO
quarkus.log.category."io.quarkus.smallrye.jwt".level=INFO
quarkus.log.category."io.undertow.request.security".level=INFO

### SECURITY AND AUTHENTICATION ###
# Regular API endpoints
quarkus.smallrye-jwt.enabled=true
smallrye.jwt.sign.key=privatekey.pem
smallrye.jwt.sign.key.location=privatekey.pem
mp.jwt.verify.publickey.location=publickey.pem
quarkus.native.resources.includes=publicKey.pem
mp.jwt.verify.issuer=RichardTafurthGarcia

# Websocket endpoints
quarkus.websockets-next.server.supported-subprotocols=bearer-token-carrier
quarkus.websockets-next.server.propagate-subprotocol-headers=true
#quarkus.websockets-next.server.activate-request-context=always

# CORS
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Content-Type,Authorization
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.cors.access-control-max-age=3600

### DATABASE ###
%prod.quarkus.datasource.db-kind = postgresql
%prod.quarkus.datasource.username = scamuser
%prod.quarkus.datasource.password = scampass
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://database:5432/scamlab

#%prod.jakarta.persistence.schema-generation.create-source=metadata-then-script

quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.hibernate-orm.database.generation=drop-and-create 
%prod.quarkus.hibernate-orm.database.generation=none
%dev.javax.persistence.schema-generation.scripts=create
%dev.javax.persistence.schema-generation.scripts.create-target=create.sql

quarkus.hibernate-orm.request-scoped.enabled=true
quarkus.hibernate-orm.log.sql=false

### MESSAGING ###
#mp.messaging.outgoing.player-joined-game-out.address=player-joined-game-in
mp.messaging.outgoing.put-players-on-waiting-list.connector=smallrye-in-memory
mp.messaging.outgoing.notify-reason-for-waiting.connector=smallrye-in-memory
mp.messaging.outgoing.return-game-assignment.connector=smallrye-in-memory
mp.messaging.outgoing.notify-game-as-ready.connector=smallrye-in-memory
mp.messaging.outgoing.notify-game-as-starting.connector=smallrye-in-memory
mp.messaging.outgoing.handle-player-leaving.connector=smallrye-in-memory
mp.messaging.outgoing.register-start-game.connector=smallrye-in-memory
mp.messaging.outgoing.acknowledge-start-vote.connector=smallrye-in-memory
mp.messaging.outgoing.notify-reason-for-abrupt-end-of-game.connector=smallrye-in-memory

#mp.messaging.incoming.player-joined-game-in.connector=smallrye-in-memory
#mp.messaging.incoming.player-joined-game-in.topic=player-joined-game

### SCHEDULER ###
quarkus.scheduler.start-mode=forced

### TESTING ###
quarkus.http.test-timeout=300s
%dev.quarkus.datasource.dev-ui.allow-sql=true
